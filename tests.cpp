
#include <iostream>
#include "biginteger.h"

#define test(EXPRESSION, MESSAGE)\
    if (!(EXPRESSION)) {\
        std::cerr << MESSAGE << ": " << "Test '" << #EXPRESSION << "' failed in file " << __FILE__ << " line " << __LINE__ << std::endl;\
        errorCount++;\
    }

int main() {
    int errorCount = 0;
    try {
        BigIntegerVersionInfo& version = BigIntegerVersionInfo::Instance();
        version.printCompleteInfo();

        BigInteger a(1), b(2), c(3), num;
        BigInteger a1("1"), fromString("21474836471234567890"), fromStdString(std::string("21474836471234567890"));
        BigInteger fromString1("-21474836471234567890"), fromStdString1(std::string("-21474836471234567890"));
        BigInteger fromLong(-2147483648l), fromLongLong(2147483648ll), fromUnsignedLong(2147483648ul);
        BigInteger fromString2("2147483648");

        test(a == a1, "1st equality test failed");
        test(fromString == fromStdString, "2st equality test failed");
        test(fromString == "21474836471234567890", "3rd equality test failed");
        test(a == 1, "Integer equality test failed");
        test(a == "1", "String equality test failed");
        test(fromUnsignedLong == fromLongLong, "Equality test failed");
        test(fromString2 == fromLongLong, "Equality test failed");
        test(fromStdString1 == fromStdString1, "Equality test failed");
        test(num == 0, "Equality test failed");

        test(a != b, "1st non-equality test failed");
        test(a != 100, "2nd non-equality test failed");
        test(fromString != fromString1, "3rd non-equality test failed");
        test(fromStdString != "21474836471234567891", "4th non-equality test failed");
        test(fromLongLong != fromLong, "Non-equality test failed");
        test(num != fromLong, "Non-equality test failed");

        test(a < b, "Less than test failed");
        test(b < c, "Less than test failed");
        test(fromStdString1 < fromString, "Less than test failed");
        test(fromLong < fromString2, "Less than test failed");
        test(a < fromLongLong, "Less than test failed");
        test(num < a, "Less than test failed");

        test(c > a, "Greater than test failed");
        test(b > a, "Greater than test failed");
        test(fromString > fromString2, "Greater than test failed");
        test(fromString2 > fromLong, "Greater than test failed");
        test(fromLongLong > c, "Greater than test failed");

        test(fromLongLong >= c, "Greater or equal test failed");
        test(fromLongLong >= fromUnsignedLong, "Greater or equal test failed");
        test(fromString >= fromStdString, "Greater or equal test failed");
        test(fromString1 >= fromStdString1, "Greater or equal test failed");
        test(c >= c, "Greater or equal test failed");

        test(b <= c, "Less or equal test failed");
        test(fromString2 <= fromLongLong, "Less or equal test failed");
        test(fromString1 <= fromStdString, "Less or equal test failed");
        test(fromStdString1 <= fromString, "Less or equal test failed");
        test(a <= a, "Less or equal test failed");

        test(a + b == c, "Sum test failed");
        test(a1 + a == b, "Sum test failed");
        test(fromString1 + fromString == num, "Sum test failed");
        test(fromString1 + num == fromStdString1, "Sum test failed");
        test(num + fromString1 == fromStdString1, "Sum test failed");
        test(num + num == num, "Sum test failed");
        test(fromString + fromStdString == "42949672942469135780", "Sum test failed");
        test(fromString + fromLong + fromStdString + fromLongLong == "42949672942469135780", "Sum test failed");

        test(c - a == b, "Sub test failed");
        test(c - num == c, "Sub test failed");
        test(fromStdString1 - fromStdString1 == num, "Sub test failed");
        test(fromUnsignedLong - fromLongLong == num, "Sub test failed");
        test(fromString2 - fromLong == "4294967296", "Sub test failed");

        test(fromStdString * a == fromStdString, "Mul test failed");
        test(fromStdString * num == num, "Mul test failed");
        test(fromStdString1 * 1024 == 1024 * fromStdString1, "Mul test failed");
        test(fromStdString * fromStdString1 == fromString * fromString1, "Mul test failed");

        test(fromStdString / a == fromStdString, "Div test failed");
        test(num / fromStdString == num, "Div test failed");
        test(a / fromStdString == 0, "Div test failed");
        test(fromString / fromStdString == a, "Div test failed");
        test(fromStdString / b == "10737418235617283945", "Div test failed");

        test(fromStdString % a == num, "Modulo test failed");
        test(num % fromStdString == num, "Modulo test failed");
        test(fromStdString % b == num, "Modulo test failed");
        test(fromStdString % c == a, "Modulo test failed");

        test(fromStdString++ == fromString, "Inc test failed");
        test(++fromString == fromStdString, "Inc test failed");
        test(fromStdString-- == fromString, "Dec test failed");
        test(--fromString == fromStdString, "Dec test failed");

        test((fromString = "21474836471234567890") == "21474836471234567890", "Assignment test failed");
        test((fromStdString = fromString) == fromString, "Assignment test failed");

        test(+a == a, "unary + test failed");
        test(+fromStdString == "21474836471234567890", "unary + test failed");
        test(-a == -1, "unary - test failed");
        test(-fromStdString == fromString1, "unary - test failed");
        test(-fromString1 == fromString, "unary - test failed");

        test(b << 1000 == "21430172143725346418968500981200036211228096234110672148875007767407021022498722449863967576313917162551893458351062936503742905713846280871969155149397149607869135549648461970842149210124742283755908364306092949967163882534797535118331087892154125829142392955373084335320859663305248773674411336138752", "left shift test failed");
        test(fromString << 10 == "21990232546544197519360", "left shift test failed");

        test(BigInteger("1267650600228229401496703205376") >> 99 == 2, "right shift test failed");
        test(fromStdString1 >> 5 == "-671088639726080246", "right shift test failed");

        BigInteger fact1000 = fact(BigInteger(1000)), fact1100 = fact(BigInteger(1100));
        BigInteger pow2_10000 = pow(b, 10000), pow3_10000 = pow(c, 10000);

        test(gcd(fact1000, -fact1100) == fact1000, "GCD test failed");
        test(gcd(fromLongLong, 1024) == 1024, "GCD test failed");

        test(lcm(-fact1100, fact1000) == fact1100, "LCM test failed");
        test(lcm(1024, fromLongLong) == fromLongLong, "LCM test failed");

        test(fib(num) == num, "Fib test failed");
        test(fib(c) == b, "Fib test failed");
        test(fib(BigInteger(1024)) == "4506699633677819813104383235728886049367860596218604830803023149600030645708721396248792609141030396244873266580345011219530209367425581019871067646094200262285202346655868899711089246778413354004103631553925405243", "Fib test failed");

        test(abs(fromStdString1) == -fromStdString1, "Abs test failed");
        test(abs(BigInteger("-35645645456645456446554456456456456")) == "35645645456645456446554456456456456", "Abs test failed");

        test(pow(b, 100) == "1267650600228229401496703205376", "Pow test failed");
        test(pow(fromStdString, 4) == "212676478978352000017790900619394406688343167924467900549550726657982514410000", "Pow test failed");

        test(fact(BigInteger(7)) == 5040, "fact test failed");
        test(fact1000 == "402387260077093773543702433923003985719374864210714632543799910429938512398629020592044208486969404800479988610197196058631666872994808558901323829669944590997424504087073759918823627727188732519779505950995276120874975462497043601418278094646496291056393887437886487337119181045825783647849977012476632889835955735432513185323958463075557409114262417474349347553428646576611667797396668820291207379143853719588249808126867838374559731746136085379534524221586593201928090878297308431392844403281231558611036976801357304216168747609675871348312025478589320767169132448426236131412508780208000261683151027341827977704784635868170164365024153691398281264810213092761244896359928705114964975419909342221566832572080821333186116811553615836546984046708975602900950537616475847728421889679646244945160765353408198901385442487984959953319101723355556602139450399736280750137837615307127761926849034352625200015888535147331611702103968175921510907788019393178114194545257223865541461062892187960223838971476088506276862967146674697562911234082439208160153780889893964518263243671616762179168909779911903754031274622289988005195444414282012187361745992642956581746628302955570299024324153181617210465832036786906117260158783520751516284225540265170483304226143974286933061690897968482590125458327168226458066526769958652682272807075781391858178889652208164348344825993266043367660176999612831860788386150279465955131156552036093988180612138558600301435694527224206344631797460594682573103790084024432438465657245014402821885252470935190620929023136493273497565513958720559654228749774011413346962715422845862377387538230483865688976461927383814900140767310446640259899490222221765904339901886018566526485061799702356193897017860040811889729918311021171229845901641921068884387121855646124960798722908519296819372388642614839657382291123125024186649353143970137428531926649875337218940694281434118520158014123344828015051399694290153483077644569099073152433278288269864602789864321139083506217095002597389863554277196742822248757586765752344220207573630569498825087968928162753848863396909959826280956121450994871701244516461260379029309120889086942028510640182154399457156805941872748998094254742173582401063677404595741785160829230135358081840096996372524230560855903700624271243416909004153690105933983835777939410970027753472000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "fact test failed");

        test(log10(BigInteger("1000000000000000000000000000000000000000000")) == 42, "fact test failed");

        test(pow2_10000*pow3_10000 == "325464658549366205883184429132500573463884637762028178443836042858527503193176637401787736300238202768004806922154307358113527295872833268827614109076375493419874332840764232553207490334347503015832945623789498616297577964397267434720956828790319673771248105387488832042240721213353459735500782713467052102165658343759175809709868584178546308480596843608568545571399805365001369520476147372707586211182859659854674752704195940975223903004928036333858149683386177728165964220863893599109666571725039391538649256624517768370928780248122994233332737918001208535649132595979125488271969760907793552781682875739025924894254138262911829255875367614193406645317610033759099796497068127897034255583684455430912036423049156334522111159655481083956888093017116443171228567594129974715691991487152272451836859907936071851942824088633028530649564379674012613417221809574294897719514701566102297521240068189093467946479598047715158941212594582001098780096433962861203337358324891053224168618860958558406805404230965379691080135562164961632469165075821725836330108835561479783120364165214266521428999432929907648843895195863965605887943327940678157648642235132172271544812090360945205281955609398307472632187789258160421902536044672398179280112191451984770683814926810159703553940777814278087903754090638663565299503771608082493890361058099898377917330016931082495286917359637953305980763970420653701965229329506589850103007849446028066322998658336514271246470669855444247951369926252837200593369885322462130469115746480057513877669740922144533747296554283134416433907274093670940540767645563312693693321475420942189246449372017441250111206912854336996260372442135225872087428882060570832536467981175476493000316976345863970863719687990272517988426846696710153277664543141610026187867233599555468053287281962327238036451559936354258773289984236730437588513398590322277768161445621141298087370599350128496857013368967806341414569752272132315582129145303354965536279989486155148681579640224380000218271151966983687794231423035788917989915040685195978034947032257202816037658815106637855820868184702675838319820661750229967980362014165212119358708963986993755144041152091139449862493878892445946741594545544223815458848805927132395259678060986003165632255138021877191064115459271825130390240958747664958766965034079021122102107529255421657038560947463018167354876174227528507245225883170615839283452018740776886738288723555497250041263133761154707592420552617697589171773852967182671116858148562028830287101101763571007901653259040738340828832725663689161683424213814771012913690892776181086923240108753179378009228232687298506301750558671391385394155718382663347275115932395553406609219845554445034251472597164738004948276007101485141652029540725229833261340262001541730403418332116247563571556452768940448116351607431273748573366748121525342095977638177388208737930119317106591385874241832968062872396087587233425257074675340442177101375103016272862039022026984228962024883890396927036103167808126874962162118557945800223947855677081430205817090871764577476749083729718229030415710011517856275218619737163415572785712887767066308139375168999206726956850010241636699363640930307377368940669491017220969457377585431213315710185781219109594446913978398733439134564121915024700616350953283129134011878853276469524065408259921351864969580406255728064610596519637681991886236706560389539707271894037131557826997198371306866619052051686093041950494316743749818542667448513286174185471540146050432605143779567311132758778970756291021855291950362303371288554332863080619689906885164376318514386803963568744440582773360590837341288527841374926206344404147294602844582043022017386386340851537884457435295027683337029456965695577859326167204630144932530632850221699821031018068512348995942337010134926026856870924140243679229037949601376195104921945759629156749063719722237106850134758128306203400006998093592754115379117138741328702679343877240051335498666981948474897217124590453903075650607688464837918657378689365777566120992614491613725229078643664432668530507708590239903897188053998897551332246953454979321425184486865971139539930042381826123050547537191294327532099845019329700964297523716691197214314852901622959524541895987830102095372784241556818217645683243408575224175361496076753307089110906055174275710764586819696570685895992543427553495845995570339494139987561306625322428270151419546924015168710545331017307401476775692012441552898881794949762742014154818600328933808542721955198098334985711860152975681665082097502865660932226979194244172512272882142849000737760583184170043419523629341228703497460019609693038730194866563517174572010425232225609231116666380138118405053088478772451090621432800389171676359083017896315901369371818296291102140221651614357540156900937831693593924424496210951648729312414895598228200675400060522234580500889428857564836573903169066215814563939119628954772710875665007249300621187228390694269162387937512521395037970854945041438099565585652765603240338806193986946223542640350174629958894931009488514583365192090807573543336133783914091271209232167952443905982778812662236946587549096619211567136076743617619845735970876157507966955767747234836216872029995121471634158802421570834803178204696648839177350215257791628448258249821569328219065668538011655770351748393698982124129402192336170384896711753852275629822435378388062162432172956200188054033520408940993787504781089401908633375690933405673622332756269913937451315594119664706254150593226454340635950156878303217135873150370774901032863571643717417378670506299737480799030354032602633264978026260823019592117206234190705832615464486640568778455730601608940496977092927782772984737040206766721461010359540089761861703334307303449643175034332394898566191134854621909540100189598673280781165143986156782922654857746309562105911709196667804528311358804601322475571083713699362097785856439820499479059269126645214437899260720082311007211749282083336978175060897219955819807892017704025989078636828281036757700836880128911769941699153093116186472778797803066990830968517477525094592972841408590976977980638009375230549567969020953940665294593440922147485504148690273700572898609184128847722373102747548298019929057538866992291641657450938051603707776894622807592521262411947341150618013934504082979662947899775613448574631335247407046283649535522340500969539871375062875466796772047352718051415549442104984705258800856290641318487700122774741736599768379387557532057753090731445391436299818535863666724977504956930524657088260728600862781520562084059306899648500625680163455706869352317861255164595189535308054005206537577775630434300446900130011123822184877375108039438871741321651484660245071820275888642350144230073255865639401157569290693930280841863384306678123701106436636461886761625159029476540415556962616161117920118820937726387989748268942259731594435395890785156376723488059139203135273871505697064404033878331180754583324408260659941555693533086971480450405320607163253031465784911467289204053898925739408401335379680523020334729463743967390996230881131934040422378521124804947833126070740046326472576708782362727123042501018273769606509751286447251290789313262095130288870630693241616938054862545519890770721563212689505900443159596035497375227445155344209815047236075496449690341227358912352138008132854690468311121681229108709132934797431580985644301526825869131022545123900896540092978889504011905898085241618615622632554029528832075182503611278833314304521895693401045688764458835933110706994565820912969515824194296431475358203002395171879890187319850993835971566992529306338248029742056770485230119496944060827297877995674794680111308298238538587604351858145771689940255034509715822168066468944636492829950722523437298701065045945850906803131039186298788361100321736005602900819166023909376", "Big mul test failed");
        test(pow3_10000*pow2_10000 == "325464658549366205883184429132500573463884637762028178443836042858527503193176637401787736300238202768004806922154307358113527295872833268827614109076375493419874332840764232553207490334347503015832945623789498616297577964397267434720956828790319673771248105387488832042240721213353459735500782713467052102165658343759175809709868584178546308480596843608568545571399805365001369520476147372707586211182859659854674752704195940975223903004928036333858149683386177728165964220863893599109666571725039391538649256624517768370928780248122994233332737918001208535649132595979125488271969760907793552781682875739025924894254138262911829255875367614193406645317610033759099796497068127897034255583684455430912036423049156334522111159655481083956888093017116443171228567594129974715691991487152272451836859907936071851942824088633028530649564379674012613417221809574294897719514701566102297521240068189093467946479598047715158941212594582001098780096433962861203337358324891053224168618860958558406805404230965379691080135562164961632469165075821725836330108835561479783120364165214266521428999432929907648843895195863965605887943327940678157648642235132172271544812090360945205281955609398307472632187789258160421902536044672398179280112191451984770683814926810159703553940777814278087903754090638663565299503771608082493890361058099898377917330016931082495286917359637953305980763970420653701965229329506589850103007849446028066322998658336514271246470669855444247951369926252837200593369885322462130469115746480057513877669740922144533747296554283134416433907274093670940540767645563312693693321475420942189246449372017441250111206912854336996260372442135225872087428882060570832536467981175476493000316976345863970863719687990272517988426846696710153277664543141610026187867233599555468053287281962327238036451559936354258773289984236730437588513398590322277768161445621141298087370599350128496857013368967806341414569752272132315582129145303354965536279989486155148681579640224380000218271151966983687794231423035788917989915040685195978034947032257202816037658815106637855820868184702675838319820661750229967980362014165212119358708963986993755144041152091139449862493878892445946741594545544223815458848805927132395259678060986003165632255138021877191064115459271825130390240958747664958766965034079021122102107529255421657038560947463018167354876174227528507245225883170615839283452018740776886738288723555497250041263133761154707592420552617697589171773852967182671116858148562028830287101101763571007901653259040738340828832725663689161683424213814771012913690892776181086923240108753179378009228232687298506301750558671391385394155718382663347275115932395553406609219845554445034251472597164738004948276007101485141652029540725229833261340262001541730403418332116247563571556452768940448116351607431273748573366748121525342095977638177388208737930119317106591385874241832968062872396087587233425257074675340442177101375103016272862039022026984228962024883890396927036103167808126874962162118557945800223947855677081430205817090871764577476749083729718229030415710011517856275218619737163415572785712887767066308139375168999206726956850010241636699363640930307377368940669491017220969457377585431213315710185781219109594446913978398733439134564121915024700616350953283129134011878853276469524065408259921351864969580406255728064610596519637681991886236706560389539707271894037131557826997198371306866619052051686093041950494316743749818542667448513286174185471540146050432605143779567311132758778970756291021855291950362303371288554332863080619689906885164376318514386803963568744440582773360590837341288527841374926206344404147294602844582043022017386386340851537884457435295027683337029456965695577859326167204630144932530632850221699821031018068512348995942337010134926026856870924140243679229037949601376195104921945759629156749063719722237106850134758128306203400006998093592754115379117138741328702679343877240051335498666981948474897217124590453903075650607688464837918657378689365777566120992614491613725229078643664432668530507708590239903897188053998897551332246953454979321425184486865971139539930042381826123050547537191294327532099845019329700964297523716691197214314852901622959524541895987830102095372784241556818217645683243408575224175361496076753307089110906055174275710764586819696570685895992543427553495845995570339494139987561306625322428270151419546924015168710545331017307401476775692012441552898881794949762742014154818600328933808542721955198098334985711860152975681665082097502865660932226979194244172512272882142849000737760583184170043419523629341228703497460019609693038730194866563517174572010425232225609231116666380138118405053088478772451090621432800389171676359083017896315901369371818296291102140221651614357540156900937831693593924424496210951648729312414895598228200675400060522234580500889428857564836573903169066215814563939119628954772710875665007249300621187228390694269162387937512521395037970854945041438099565585652765603240338806193986946223542640350174629958894931009488514583365192090807573543336133783914091271209232167952443905982778812662236946587549096619211567136076743617619845735970876157507966955767747234836216872029995121471634158802421570834803178204696648839177350215257791628448258249821569328219065668538011655770351748393698982124129402192336170384896711753852275629822435378388062162432172956200188054033520408940993787504781089401908633375690933405673622332756269913937451315594119664706254150593226454340635950156878303217135873150370774901032863571643717417378670506299737480799030354032602633264978026260823019592117206234190705832615464486640568778455730601608940496977092927782772984737040206766721461010359540089761861703334307303449643175034332394898566191134854621909540100189598673280781165143986156782922654857746309562105911709196667804528311358804601322475571083713699362097785856439820499479059269126645214437899260720082311007211749282083336978175060897219955819807892017704025989078636828281036757700836880128911769941699153093116186472778797803066990830968517477525094592972841408590976977980638009375230549567969020953940665294593440922147485504148690273700572898609184128847722373102747548298019929057538866992291641657450938051603707776894622807592521262411947341150618013934504082979662947899775613448574631335247407046283649535522340500969539871375062875466796772047352718051415549442104984705258800856290641318487700122774741736599768379387557532057753090731445391436299818535863666724977504956930524657088260728600862781520562084059306899648500625680163455706869352317861255164595189535308054005206537577775630434300446900130011123822184877375108039438871741321651484660245071820275888642350144230073255865639401157569290693930280841863384306678123701106436636461886761625159029476540415556962616161117920118820937726387989748268942259731594435395890785156376723488059139203135273871505697064404033878331180754583324408260659941555693533086971480450405320607163253031465784911467289204053898925739408401335379680523020334729463743967390996230881131934040422378521124804947833126070740046326472576708782362727123042501018273769606509751286447251290789313262095130288870630693241616938054862545519890770721563212689505900443159596035497375227445155344209815047236075496449690341227358912352138008132854690468311121681229108709132934797431580985644301526825869131022545123900896540092978889504011905898085241618615622632554029528832075182503611278833314304521895693401045688764458835933110706994565820912969515824194296431475358203002395171879890187319850993835971566992529306338248029742056770485230119496944060827297877995674794680111308298238538587604351858145771689940255034509715822168066468944636492829950722523437298701065045945850906803131039186298788361100321736005602900819166023909376", "Big mul test failed");
        test(pow2_10000 + pow3_10000 == "16313501853426258743032567291811547168121324535825379939348203261918257308143190787480155630847848309673252045223235795433405582999177203852381479145368112501453192355166224391025423628843556686559659645012014177448275529990373274425446425751235537341867387607813619937225616872862016504805593174059909520461668500663118926911571773452255850626968526251879139867085080472539640933730243410152186914328917354576854457274195562218013337745628502470673059426999114202540773175988199842487276183685299388927825296786440252999444785694183675323521704432195785806270123388382931770198990841300861506996108944782065015163410344894945809337689156807686673462563038164792190665340124344133980763205594364754963451564072340502606377790585114123814919001637177034457385019939060232925194471114235892978565322415628344142184842892083466227875760501276009801530703037525839157893875741192497705300469691062454369926795975456340236777734354667139072601574969834312769653557184396147587071260443947944862235744459711204473062937764153770030210332183635531818173456618022745975055313212598514429587545547296534609597194836036546870491771927625214352957503454948403635822345728774885175809500158451837389413798095329711993092101417428406774326126450005467888736546254948658602484494535938888656542746977424368385335496083164921318601934977025095780370104307980276356857350349205866078371806065542393536101673402017980951598946980664330391505845803674248348878071010412918667335823849899623486215050304052577789848512410263834811719236949311423411823585316405085306164936671137456985394285677324771775046050970865520893596151687017153855755197348199659070192954771308347627111052471134476325986362838585959552209645382089055182871854866744633737533217524880118401787595094060855736960775255944079381255965868325287918309684477266820462656541300561885538183005389553307375732937891768954874834079176123147164208760842330167232504141412423316346872876374258451251136484344228972946244648229617921930430896436106191414278784298831857752816601790632766369013498319405682844575399290895789305444936692831174736069491948599246980025265724155967709027181029632844626653819448413702048857306230712272861773653222921311605003794659211032102785307304069278302023001836155710842267186356390600850119110566574511888332681365212266855439192535555978010417318194011189380542204285653084730156264530789326015534085860764973566473919937449188928369471444291530670789265823608086912422470929762363354194569588929680467145258978973161693346222343412948817748797491359497327478724868832548692477143703871057543667539261055251243388790207148079904692851751215278379776330907089418985716337314534847532926992606762970488836884137030863682574495007806562128537725528719926154870403500138898570254761047328742875857164025428484010082071219171684219074693050726737692434268724999342919071687357876886175408763120923970102126439761161941667626263688254413585014662541841222925946374734614804023884949168872550904287323756529949122805471386306671762571245545567280182440910966288892527115028632882524995300079040786162714572135413918596421067462005548871842413156014491766574229855096733013515774419650684179696695430372888547345453568238856381748877659040994575500046806537403791671666305659035499570200811458584080920625321002683410675042159822422315984291935601658964881532801417294464583859361318626289718705718180028773351755237549082020528436519906834120983569388083688955428053000513013215941924295027240397707563090454879853696308687331669550807469407637648817054987768765873195041168393139755716890980704110230657694071806947147067551563878603034934498258473746203515043281889213047667410964017247016667983618606614413777085428607895689721390616149395251085909532320238374552155811104129601964399116592997516854785544952706307113299269918637092059773350794135752682865283718777790894390468313817485303012802088731554610850250798122709778900864795497956861277109215703823669740531121499278135797364864675635272384204002729767004806616846437155075258170688900177979082942191136923550213876441998357350242496521565733168365361731058884489568697309499364691983957648769123834365092645295564456562487110624719341711364187373881381377920722852248257299725472830777561736582748123197471490432933180742124294041151669104559232789828010181562528619200830271248649498155163333889093802735861214135090985476186918708754766384595567536004965974580926764436156949672795217794726118173366510421302557403015968842662198399269018031810070620519139579250071933609002492223953130422705593589101385954614361747141967973220215553496889592071757043114249825966265477734861080522154715638534668432549672278829645657553855538360253768378505684176611106217895100045701851974985618972364653700978282007650720728923272409999148909377", "Big sum test failed");
        test(pow3_10000 + pow2_10000 == "16313501853426258743032567291811547168121324535825379939348203261918257308143190787480155630847848309673252045223235795433405582999177203852381479145368112501453192355166224391025423628843556686559659645012014177448275529990373274425446425751235537341867387607813619937225616872862016504805593174059909520461668500663118926911571773452255850626968526251879139867085080472539640933730243410152186914328917354576854457274195562218013337745628502470673059426999114202540773175988199842487276183685299388927825296786440252999444785694183675323521704432195785806270123388382931770198990841300861506996108944782065015163410344894945809337689156807686673462563038164792190665340124344133980763205594364754963451564072340502606377790585114123814919001637177034457385019939060232925194471114235892978565322415628344142184842892083466227875760501276009801530703037525839157893875741192497705300469691062454369926795975456340236777734354667139072601574969834312769653557184396147587071260443947944862235744459711204473062937764153770030210332183635531818173456618022745975055313212598514429587545547296534609597194836036546870491771927625214352957503454948403635822345728774885175809500158451837389413798095329711993092101417428406774326126450005467888736546254948658602484494535938888656542746977424368385335496083164921318601934977025095780370104307980276356857350349205866078371806065542393536101673402017980951598946980664330391505845803674248348878071010412918667335823849899623486215050304052577789848512410263834811719236949311423411823585316405085306164936671137456985394285677324771775046050970865520893596151687017153855755197348199659070192954771308347627111052471134476325986362838585959552209645382089055182871854866744633737533217524880118401787595094060855736960775255944079381255965868325287918309684477266820462656541300561885538183005389553307375732937891768954874834079176123147164208760842330167232504141412423316346872876374258451251136484344228972946244648229617921930430896436106191414278784298831857752816601790632766369013498319405682844575399290895789305444936692831174736069491948599246980025265724155967709027181029632844626653819448413702048857306230712272861773653222921311605003794659211032102785307304069278302023001836155710842267186356390600850119110566574511888332681365212266855439192535555978010417318194011189380542204285653084730156264530789326015534085860764973566473919937449188928369471444291530670789265823608086912422470929762363354194569588929680467145258978973161693346222343412948817748797491359497327478724868832548692477143703871057543667539261055251243388790207148079904692851751215278379776330907089418985716337314534847532926992606762970488836884137030863682574495007806562128537725528719926154870403500138898570254761047328742875857164025428484010082071219171684219074693050726737692434268724999342919071687357876886175408763120923970102126439761161941667626263688254413585014662541841222925946374734614804023884949168872550904287323756529949122805471386306671762571245545567280182440910966288892527115028632882524995300079040786162714572135413918596421067462005548871842413156014491766574229855096733013515774419650684179696695430372888547345453568238856381748877659040994575500046806537403791671666305659035499570200811458584080920625321002683410675042159822422315984291935601658964881532801417294464583859361318626289718705718180028773351755237549082020528436519906834120983569388083688955428053000513013215941924295027240397707563090454879853696308687331669550807469407637648817054987768765873195041168393139755716890980704110230657694071806947147067551563878603034934498258473746203515043281889213047667410964017247016667983618606614413777085428607895689721390616149395251085909532320238374552155811104129601964399116592997516854785544952706307113299269918637092059773350794135752682865283718777790894390468313817485303012802088731554610850250798122709778900864795497956861277109215703823669740531121499278135797364864675635272384204002729767004806616846437155075258170688900177979082942191136923550213876441998357350242496521565733168365361731058884489568697309499364691983957648769123834365092645295564456562487110624719341711364187373881381377920722852248257299725472830777561736582748123197471490432933180742124294041151669104559232789828010181562528619200830271248649498155163333889093802735861214135090985476186918708754766384595567536004965974580926764436156949672795217794726118173366510421302557403015968842662198399269018031810070620519139579250071933609002492223953130422705593589101385954614361747141967973220215553496889592071757043114249825966265477734861080522154715638534668432549672278829645657553855538360253768378505684176611106217895100045701851974985618972364653700978282007650720728923272409999148909377", "Big sum test failed");
        test(pow2_10000 - pow3_10000 == "-16313501853426258743032567291811547168121324535825379939348203261918257308143190787480155630847848309673252045223235795433405582999177203852381479145368112501453192355166224391025423628843556686559659645012014177448275529990373274425446425751235537341867387607813619937225616872862016504805593174059909520461668500663118926911571773452255850626968526251879139867085080472539640933730243410152186914328917354576854457274195562218013337745628502470673059426999114202540773175988199842487276183685299388927825296786440252999444785694183675323521704432195785806270123388382931770198990841300861506996108944782065015163410344894945809337689156807686673462563038164792190665340124344133980763205594364754963451564072340502606377790585114123814919001637177034457385019939060232925194471114235892978565322415628344142184842892083466227875760501276009801530703037525839157893875741192497705300469691062454369926795975456340236777734354667139072601574969834312769653557184396147587071260443947944862235744459711204473062937764153770030210332183635531818173456618022745975055313212598514429587545547296534609597194836036546870491771927625214352957503454948403635822345728774885175809500158451837389413798095329711993092101417428406774326126450005467888736546254948658602484494535938888656542746977424368385335496083164921318601934977025095780370104307980276356857350349205866078371806065542393536101673402017980951598946980664330391505845803674248348878071010412918667335823849899623486215050304052577789848512410263834811719236949311423411823585316405085306164936671137456985394285677324771775046050970865520893596151687017153855755197348199659070192954771308347627111052471134476325986362838585959552209645382089055182871854866744633737533217524880118401787595094060855697059512918328911683581122614653586241839747839542971365616362303503007877739112125713384007660548695970292615987660927580034181509933280094979660639948764507604886779288785204920758033952224437931846070811842994836913213975199896820396129052119582081571836812114614258485746982618162546225627594177071013174994743405082292642549748694628340534288189400767336157767899503959083105189362378230419096489393467794333933974831541000239069361665416356365314712256172770217095737641366216910170398553053472005303559779015362166724269865376815907640682701168031417935811547219507387711613041376351968870953434862946094546357807346574214028235364335795273457020583198167493155116614818151439333881050182156630568131713322446877218753915597825038854037537694135346320036502880944633342959501276332286706756660287189442331802898938518266666396278524522391781619373848241049867146108727598390579088696908671565617734063094742158797153751992940937948541464883965300120164880976902584353721190664424994747342650910826242063842124340904687891607835110282108073261902565630059248468853916053018165549994131809328763329156294529703114817194360035601792715247204692467963048079913034079170896837714900250148032082725673751150514002139792273446750184820756327215256100055999055593661443344565677680608444683256284600091722476854767762775806351401728149147736437288615471600589061193589193187759934967781867850448110439365608034264221150468706244361428910068582460314829167973692541159706324300882870875144124918549776189563940859413675669521132862702345562825740802108380642324415215742534243384150257181130495046991861095122921734061081657086357007153654826426374051337391882412119081487249452428221565155816860255602709626309789325118824588295342021447934213287888501841233485867090644052743095052584666581486120844449825752267395350262696355717337901741578956545774771427091857485999539691569420525969756592612770445326892931293319477116110046501167141103241201703655548742385108176265690699041402997650332329482324133771064079740684026756505813533538913374785185297208506886079147164048385808748437557611072320045002030386049300924807699247435524638954356790096344018958640904172776310660366770270133054538240367838726364698837018451602004212489359054115773932681635609103561214204680344903815386446934155372793761607127460626795240429471515555270352593134681207258719960991381310697645591628415858112051619094786088684176113880485005390685072069086050228934385237480972954837563283019283407151247765143782582470607944024751990631990002290065832261098039894853287035075935467218195216644434217028109967161978104402261674670827624326970844400979879297974386706240819648535680902783692663135568122161879882022716136480031855311253560730663691505617298918879462239381365861409305023784628669421028542427206538645862389971734508209104327785115807976473313088374528317258956643263914554152895565796653357029933048620630836128584199218935356307913421605398430869884705471063378785318465079418346155586277937705559723800413955490625", "Big sub test failed");
        test(pow3_10000/pow2_10000 == "817693521342427268409186878404518666964359608565698711244450190172630641548493739275092904666806422285857533520065527147080966185461862706350157175902669782479702293684137773009549627702840668615006995105504296220059030345806799543594822945720359949696774213532555883957802813330397770246867317378025270316309446454853891604950078878367991064400678722260549519686970281206822011437580101064102387301466154286321692949183211597528300871215263336270323878974360547713120514905899856416205977721677152873847445178386708482743452379589313174698126715372309478245268751244409731126277436353295484547057735896866601875115546614730641149437582183368915216653169878333851222581705201836705165909891186180427786706601566565106401337746939130434862614491785994972565746023111840655741587306281621767611836733796425887530409192153142234702165447513971809490244840907246900551205237511271963014036225522375919354564250623569281551411877029214545976823500768455817263682357299271307100686329619119507626062115242786978862109166105416954191701227098185976912671782492420466927292448265892562229045174509238802547649481701821819419955053382076557384418996624864427151989980883954788914150693880528015373778322695520536507997349884864422847914648122038247792794244360404294284054758779796569170409967222920482698310186779974514919069213757220555287874706284129125374404420357416335503991994158900219279712784256219455194332721775620220216616605247780832610858953105549734069141535522760163001760945854309395559030651920125962157254284597476217376255525214816353107981678815771163798017243689849513567861221326447262175763552448080786841070459428883009376195490663118292631889658424441436068930682003221763491397019444752160704929287761577568398112932512873559005592258047382858", "Big div test failed");
        test(pow3_10000%pow2_10000 == "18782032942027700190835567272425115624521777558887423300720379030699859460179107076431208530038928569734729523029935569401791444080339194298633192160656569119865469903481542011377301192653976113774479014881757432867892935914212192971150802618356559284681258368877756155451411689438588509517247436613437677032154404829423565434601407035181183743802847995455023497939677048558199082239946016508645111901486859200444299060102134636178791960933554223149648780168300116020186618021531902988348272700889174609289301648985588929258265731580189258551709257205665449334417490620628935836288861413416818710525065798105897280959439532246408999117752910984924075615187761134718415401268461488685600910493852109946643632197032142106120874596253362186372482481837447079550983879086311758201021118173449077818101895002241856666212896242719930894479480863008084504521507659678674601735933084211804459371288833483438612114791340962868840966742655259315132894419274656476995225657041727354006846032962910171266282061266266610998580977027867236966076285001508789931054418852956901144933436634477490688226783872199822205916567258996312302566637677308830077420531821218300667701369951867151067229260594193201719740918647603540479244846753902542896500182072474125596285057215499031070068322398050281893864804247977378745133972067276468919869090524616058991266480545350175335927279323172284061440527728338254115400854404730179711075782052730296561804927851656693412556997526026547909038018887837617232880994060542620493019353983297881233795397642267339280479880437601360050881737257326135779172076755784245447685943073342034714252685404935277285912839962407304888723416874300050562542852913169855352000750163843028540746122944782398993604207388498954910476297921212528914887904079318936898041684837187585279788382939747566107913839063302407931238085714656302119256492063154517513887685385977950129966511765140103853440379597194125367332629193098468852805046749792542667166921093294774104016776810073497038990279948036847496970872237841176535776774610663633474509173994130725493698026736199117149235309552235027805296558396174144516084948366382019014193351849020654357165221813174188969538500689274002259798177120424226644165474518010522726679464330376260616548134416749807453848909104606832837521295779684973284049302529319658315223835951488364174868543294353577539264959951335145852510281913394982290915307712866453208527310301909199966015061611563122413557218698142788987453968042780119465954020292321536747676651579389505681248541516626051557553608995739652496125406512361080155412424499746186614545106596100054193146430778369666723508599186504241788643176369109885119261903115314396500239558734393805377435674646757602520894665243182499841703735600922173453097889440485152322641901766909357938890554902323877126301851015207573352148154767092752640018409241696060754259027190993600891531502170381413972923999462953232389404056987666942488334729161094441934603549146055946642719661614998954076443945848002377737696680164866921923393", "Big Modulo test failed");

        std::stringstream s;
        s << fromStdString1;
        s >> b;
        test(fromStdString1 == b, "IO test failed");

    } catch(BigIntegerException& e) {
        std::cerr << "Some computations exceptions: " << e.what() << std::endl;
        errorCount += 1;
    } catch(std::exception& e) {
        std::cerr << "Some unhandled errors: " << e.what() << std::endl;
        errorCount += 1;
    }
    if (errorCount > 0) 
        std::cerr << "Tests ended with " << errorCount << (errorCount > 1 ? " errors" : " error") << std::endl;
    else
        std::cout << "Tests ended successfully" << std:: endl;
    return errorCount;
}
